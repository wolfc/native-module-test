<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.jboss.native-module-test</groupId>
        <artifactId>aggregator</artifactId>
        <version>0.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>v2</artifactId>
    <packaging>so</packaging>
    <name>v2</name>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <configuration>
                    <javahClassNames>
                        <javahClassName>org.jboss.hello.Hello</javahClassName>
                    </javahClassNames>
                    <!-- Error searching for native class in hello/target/classes: error in opening zip file
                    <javahSearchJNIFromDependencies>true</javahSearchJNIFromDependencies>
                    -->
                    <sources>
                        <source>
                            <directory>src/main/native</directory>
                            <includes>
                                <include>**/*.c</include>
                            </includes>
                        </source>
                    </sources>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-lib</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy file="${project.build.directory}/v2.so" tofile="${project.build.directory}/test-lib/libhello.so"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <environmentVariables>
                        <LD_LIBRARY_PATH>${project.build.directory}/test-lib</LD_LIBRARY_PATH>
                    </environmentVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hello</artifactId>
        </dependency>
    </dependencies>
</project>
